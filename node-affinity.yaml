Node-Affinity: On a master machine there is a component called kube scheduller. It checks the hardware resources and decides where a particular pod should run. Its done entirely by the scheduller 
We can take control of that and i should decide where a pod has to run this is called as Node-Affinity (affinity = Bonding) 

-> kubectl get nodes
-> copy any of the node
-> kubectl label nodes {paste the copied node} slave1=jeevan
                                                {key}={value}
-> output  = node/copiednode has labeled

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deployment
  labels:
    type: webserver
    author: jeevan
spec:
  replicas:
  selector:
    matchLabels:
      type: webserver
  template:
    metadata:
      name: httpd-pod
      labels:
        type: webserver
    spec:
      containers:
        - name: myhhtpd
          image: httpd
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: slave1
                    operator: In
                    values:
                      - jeevan
...

Node-Affinity to perform network load balancing we need to integrate with node-affinity deployment with service file so tthat we can acess our application through
other nodes

---
apiVersion: v1
kind: Service
metadata:
  name: httpd-service
  labels:
    author: jeevan
spec:
  type: NodePort
  ports:
    - targetPort: 80
      port: 30008
      hostPort: 8080
  selector:
    type: webserver
    author: jeevan
...
